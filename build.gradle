buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net/" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.69', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

configurations {
    shade
    implementation.extendsFrom shade
}

java {
    withSourcesJar()
}

repositories {
    mavenCentral()
}

String umcVersion = "1.2.1"
if (!"release".equalsIgnoreCase(System.getProperty("target"))) {
    try {
        umcVersion += "-" + 'git rev-parse --verify --short=7 HEAD'.execute().text.trim()
    } catch (Exception ex) {
        umcVersion += "-unknown"
    }
}
version = "1.14.4-forge-" + umcVersion
group = "cam72cam.universalmodcore" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "UniversalModCore"


sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following forat.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'stable', version: '58-1.14.4'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                universalmodcore {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                universalmodcore {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'universalmodcore', '--all', '--output', file('src/generated/resources/')

            mods {
                universalmodcore {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url = "https://teamopenindustry.cc/maven" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.14.4-28.2.26'
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    implementation fg.deobf('cam72cam.immersiverailroading:ImmersiveRailroading:1.14.4-forge-1.10.0')
    implementation fg.deobf('trackapi:TrackAPI:1.14.4-forge-1.2')
    testImplementation ('junit:junit:4.13')

    shade group: 'org.lz4', name: 'lz4-java', version: '1.7.1'
}

jar {
    manifest {
        attributes([
                "Specification-Title": "universalmodcore",
                "Specification-Vendor": "",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": umcVersion,
                "Implementation-Vendor" :"",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}
jar.finalizedBy('reobfJar')

test {
    useJUnit()
    maxHeapSize = '1G'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifactId archivesBaseName
        }
    }
    repositories {
        maven {
            url "sftp://teamopenindustry.cc:22/var/www/html/maven/"
            credentials {
                username = "mavenci"
                password = System.getenv("MAVENCI_PASS")
            }
        }
    }
}

task ('showBuildInfo') {
    doLast {
        System.out.println("Build Uploaded to Maven at: ")
        System.out.println("https://teamopenindustry.cc/maven/cam72cam/universalmodcore/UniversalModCore/${version}/UniversalModCore-${version}.jar")
    }
}

publish.finalizedBy showBuildInfo